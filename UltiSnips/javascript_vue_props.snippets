extends javascript,vue

snippet propbool "vue prop: required Boolean" b
  ${0:propName}: {
    type: Boolean,
    required: true
  },

endsnippet


snippet propbooldef "vue prop: Boolean with default" b
  ${0:propName}: {
    type: Boolean,
    default: false,
  },

endsnippet


snippet propnum "vue prop: required Number" b
  ${0:propName}: {
    type: Number,
    required: true
  },

endsnippet


snippet propnumdef "vue prop: Number with default" b
  ${0:propName}: {
    type: Number,
    default: 0,
  },

endsnippet

snippet propsnumval "vue prop: Number with default and validator" b
  ${0:propName}: {
    type: Number,
    required: false,
    default: 0,
    validator(value) {
      const validValues = [
        // TODO
      ]
      return validValues.include(value)
    },
  },

endsnippet


snippet propstr "vue prop: required String" b
  ${0:propName}: {
    type: String,
    required: true
  },

endsnippet

snippet propstrdef "vue prop: String with default" b
  ${0:propName}: {
    type: String,
    default: 'default',
  },

endsnippet

snippet propstrval "vue prop: String with default and validator" b
  ${0:propName}: {
    type: String,
    required: false,
    default: 'default',
    validator(value) {
      const validValues = [
        // TODO
      ]
      return validValues.include(value)
    },
  },

endsnippet


snippet proparr "vue prop: required Array" b
  ${0:propName}: {
    type: Array,
    required: true
  },

endsnippet

snippet proparrdef "vue prop: Array with default" b
  ${0:propName}: {
    type: Array,
    default() {
      const arr = [
        // TODO
      ]
      return arr
    },
  },

endsnippet

snippet proparrval "vue prop: Array with default and validator" b
  ${0:propName}: {
    type: Array,
    required: false,
    default() {
      const arr = [
        // TODO
      ]
      return arr
    },
    validator(arr) {
      return arr.every((item) => {
        // TODO
      })
    },
  },

endsnippet

snippet propobj "vue prop: required Object" b
  ${0:propName}: {
    type: Object,
    required: true
  },
endsnippet

snippet propobjdef "vue prop: Object with default" b
  ${0:propName}: {
    type: Object,
    default() {
      return {
        // TODO
      }
    },
  },
endsnippet



snippet propobjval "vue prop: Object with default and validator" b
  ${0:propName}: {
    type: Object,
    required: false,
    default() {
      return {
        // TODO
      }
    },
    validator(obj) {
      // TODO
    },
  },
endsnippet


